version: '2'

networks:
  6g-network:
    driver: bridge

services:
  orderer1.example.com:
    image: hyperledger/fabric-orderer:2.5
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/ca.crt]
    ports:
      - "7050:7050"
    volumes:
      - ./crypto-config:/crypto-config
    networks:
      - 6g-network

$(for ((i=1; i<=8; i++)); do
    ORG_NAME="Org${i}"
    PEER_PORT=$((7051 + (i-1)*2000))
    CA_PORT=$((7054 + (i-1)*1000))
    COUCHDB_PORT=$((5984 + (i-1)*1000))
    echo "  ca.${ORG_NAME,,}.example.com:"
    echo "    image: hyperledger/fabric-ca:1.5"
    echo "    environment:"
    echo "      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server"
    echo "      - FABRIC_CA_SERVER_CA_NAME=ca-org${i}"
    echo "      - FABRIC_CA_SERVER_TLS_ENABLED=true"
    echo "      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG_NAME,,}.example.com-cert.pem"
    echo "      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk"
    echo "    ports:"
    echo "      - \"${CA_PORT}:7054\""
    echo "    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'"
    echo "    volumes:"
    echo "      - ./crypto-config/peerOrganizations/${ORG_NAME,,}.example.com/ca:/etc/hyperledger/fabric-ca-server-config"
    echo "    networks:"
    echo "      - 6g-network"
    echo ""
    echo "  couchdb-org${i}:"
    echo "    image: couchdb:latest"
    echo "    ports:"
    echo "      - \"${COUCHDB_PORT}:5984\""
    echo "    environment:"
    echo "      - COUCHDB_USER=admin"
    echo "      - COUCHDB_PASSWORD=adminpw"
    echo "    networks:"
    echo "      - 6g-network"
    echo ""
    echo "  peer0.${ORG_NAME,,}.example.com:"
    echo "    image: hyperledger/fabric-peer:2.5"
    echo "    environment:"
    echo "      - CORE_PEER_ID=peer0.${ORG_NAME,,}.example.com"
    echo "      - CORE_PEER_ADDRESS=peer0.${ORG_NAME,,}.example.com:${PEER_PORT}"
    echo "      - CORE_PEER_LISTENADDRESS=0.0.0.0:${PEER_PORT}"
    echo "      - CORE_PEER_LOCALMSPID=${ORG_NAME}MSP"
    echo "      - CORE_PEER_MSPCONFIGPATH=/crypto-config/peerOrganizations/${ORG_NAME,,}.example.com/users/Admin@${ORG_NAME,,}.example.com/msp"
    echo "      - CORE_PEER_TLS_ENABLED=true"
    echo "      - CORE_PEER_TLS_CERT_FILE=/crypto-config/peerOrganizations/${ORG_NAME,,}.example.com/peers/peer0.${ORG_NAME,,}.example.com/tls/server.crt"
    echo "      - CORE_PEER_TLS_KEY_FILE=/crypto-config/peerOrganizations/${ORG_NAME,,}.example.com/peers/peer0.${ORG_NAME,,}.example.com/tls/server.key"
    echo "      - CORE_PEER_TLS_ROOTCA_FILE=/crypto-config/peerOrganizations/${ORG_NAME,,}.example.com/peers/peer0.${ORG_NAME,,}.example.com/tls/ca.crt"
    echo "      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${ORG_NAME,,}.example.com:${PEER_PORT}"
    echo "      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.${ORG_NAME,,}.example.com:${PEER_PORT}"
    echo "      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock"
    echo "      - CORE_VM_DOCKER_HOSTCONFIG_MEMORY=4G"
    echo "      - CORE_VM_DOCKER_HOSTCONFIG_CPUS=2"
    echo "      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB"
    echo "      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb-org${i}:${COUCHDB_PORT}"
    echo "      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin"
    echo "      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw"
    echo "    ports:"
    echo "      - \"${PEER_PORT}:7051\""
    echo "    volumes:"
    echo "      - ./crypto-config:/crypto-config"
    echo "      - ./config/core/core-org${i}.yaml:/etc/hyperledger/fabric/core.yaml"
    echo "      - /var/run/docker.sock:/host/var/run/docker.sock"
    echo "    depends_on:"
    echo "      - couchdb-org${i}"
    echo "      - ca.${ORG_NAME,,}.example.com"
    echo "    networks:"
    echo "      - 6g-network"
    echo ""
done)
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./web/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./web/public:/6g-fabric-network/web/public
    depends_on:
      - webserver
    networks:
      - 6g-network

  webserver:
    image: node:14
    working_dir: /app
    command: bash -c "npm install express fabric-network js-yaml && node webserver.js"
    volumes:
      - ./web:/app
      - ./config:/config
    ports:
      - "3000:3000"
    networks:
      - 6g-network
